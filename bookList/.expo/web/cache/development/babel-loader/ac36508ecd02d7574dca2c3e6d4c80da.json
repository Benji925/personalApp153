{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/bengreene/Desktop/SummerWork/personalApp153/bookList/node_modules/react-native-web/src/exports/Image/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport applyNativeMethods from \"../../modules/applyNativeMethods\";\nimport createElement from \"../createElement\";\nimport css from \"../StyleSheet/css\";\nimport { getAssetByID } from \"../../modules/AssetRegistry\";\nimport resolveShadowValue from \"../StyleSheet/resolveShadowValue\";\nimport ImageLoader from \"../../modules/ImageLoader\";\nimport ImageResizeMode from \"./ImageResizeMode\";\nimport ImageSourcePropType from \"./ImageSourcePropType\";\nimport ImageStylePropTypes from \"./ImageStylePropTypes\";\nimport ImageUriCache from \"./ImageUriCache\";\nimport StyleSheet from \"../StyleSheet\";\nimport StyleSheetPropType from \"../../modules/StyleSheetPropType\";\nimport View from \"../View\";\nimport ViewPropTypes from \"../ViewPropTypes\";\nimport { bool, func, number, oneOf, shape } from 'prop-types';\nimport React, { Component } from 'react';\nvar emptyObject = {};\nvar STATUS_ERRORED = 'ERRORED';\nvar STATUS_LOADED = 'LOADED';\nvar STATUS_LOADING = 'LOADING';\nvar STATUS_PENDING = 'PENDING';\nvar STATUS_IDLE = 'IDLE';\n\nvar getImageState = function getImageState(uri, shouldDisplaySource) {\n  return shouldDisplaySource ? STATUS_LOADED : uri ? STATUS_PENDING : STATUS_IDLE;\n};\n\nvar resolveAssetDimensions = function resolveAssetDimensions(source) {\n  if (typeof source === 'number') {\n    var _getAssetByID = getAssetByID(source),\n        height = _getAssetByID.height,\n        width = _getAssetByID.width;\n\n    return {\n      height: height,\n      width: width\n    };\n  } else if (typeof source === 'object') {\n    var _height = source.height,\n        _width = source.width;\n    return {\n      height: _height,\n      width: _width\n    };\n  }\n};\n\nvar svgDataUriPattern = /^(data:image\\/svg\\+xml;utf8,)(.*)/;\n\nvar resolveAssetUri = function resolveAssetUri(source) {\n  var uri = '';\n\n  if (typeof source === 'number') {\n    var asset = getAssetByID(source);\n    var scale = asset.scales[0];\n    var scaleSuffix = scale !== 1 ? \"@\" + scale + \"x\" : '';\n    uri = asset ? asset.httpServerLocation + \"/\" + asset.name + scaleSuffix + \".\" + asset.type : '';\n  } else if (typeof source === 'string') {\n    uri = source;\n  } else if (source && typeof source.uri === 'string') {\n    uri = source.uri;\n  }\n\n  if (uri) {\n    var match = uri.match(svgDataUriPattern);\n\n    if (match) {\n      var _match = _slicedToArray(match, 3),\n          prefix = _match[1],\n          svg = _match[2];\n\n      var encodedSvg = encodeURIComponent(svg);\n      return \"\" + prefix + encodedSvg;\n    }\n  }\n\n  return uri;\n};\n\nvar filterId = 0;\n\nvar createTintColorSVG = function createTintColorSVG(tintColor, id) {\n  return tintColor && id != null ? React.createElement(\"svg\", {\n    style: {\n      position: 'absolute',\n      height: 0,\n      visibility: 'hidden',\n      width: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(\"filter\", {\n    id: \"tint-\" + id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(\"feFlood\", {\n    floodColor: \"\" + tintColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), React.createElement(\"feComposite\", {\n    in2: \"SourceAlpha\",\n    operator: \"atop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })))) : null;\n};\n\nvar Image = function (_Component) {\n  _inherits(Image, _Component);\n\n  var _super = _createSuper(Image);\n\n  _createClass(Image, null, [{\n    key: \"getSize\",\n    value: function getSize(uri, success, failure) {\n      ImageLoader.getSize(uri, success, failure);\n    }\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(uri) {\n      return ImageLoader.prefetch(uri).then(function () {\n        ImageUriCache.add(uri);\n        ImageUriCache.remove(uri);\n      });\n    }\n  }, {\n    key: \"queryCache\",\n    value: function queryCache(uris) {\n      var result = {};\n      uris.forEach(function (u) {\n        if (ImageUriCache.has(u)) {\n          result[u] = 'disk/memory';\n        }\n      });\n      return Promise.resolve(result);\n    }\n  }]);\n\n  function Image(props, context) {\n    var _this;\n\n    _classCallCheck(this, Image);\n\n    _this = _super.call(this, props, context);\n    _this._filterId = 0;\n    _this._imageRef = null;\n    _this._imageRequestId = null;\n    _this._imageState = null;\n    _this._isMounted = false;\n\n    _this._createLayoutHandler = function (resizeMode) {\n      var onLayout = _this.props.onLayout;\n\n      if (resizeMode === 'center' || resizeMode === 'repeat' || onLayout) {\n        return function (e) {\n          var layout = e.nativeEvent.layout;\n          onLayout && onLayout(e);\n\n          _this.setState(function () {\n            return {\n              layout: layout\n            };\n          });\n        };\n      }\n    };\n\n    _this._getBackgroundSize = function (resizeMode) {\n      if (_this._imageRef && (resizeMode === 'center' || resizeMode === 'repeat')) {\n        var _this$_imageRef = _this._imageRef,\n            naturalHeight = _this$_imageRef.naturalHeight,\n            naturalWidth = _this$_imageRef.naturalWidth;\n        var _this$state$layout = _this.state.layout,\n            height = _this$state$layout.height,\n            width = _this$state$layout.width;\n\n        if (naturalHeight && naturalWidth && height && width) {\n          var scaleFactor = Math.min(1, width / naturalWidth, height / naturalHeight);\n          var x = Math.ceil(scaleFactor * naturalWidth);\n          var y = Math.ceil(scaleFactor * naturalHeight);\n          return {\n            backgroundSize: x + \"px \" + y + \"px\"\n          };\n        }\n      }\n    };\n\n    _this._onError = function () {\n      var _this$props = _this.props,\n          onError = _this$props.onError,\n          source = _this$props.source;\n\n      _this._updateImageState(STATUS_ERRORED);\n\n      if (onError) {\n        onError({\n          nativeEvent: {\n            error: \"Failed to load resource \" + resolveAssetUri(source) + \" (404)\"\n          }\n        });\n      }\n\n      _this._onLoadEnd();\n    };\n\n    _this._onLoad = function (e) {\n      var _this$props2 = _this.props,\n          onLoad = _this$props2.onLoad,\n          source = _this$props2.source;\n      var event = {\n        nativeEvent: e\n      };\n      ImageUriCache.add(resolveAssetUri(source));\n\n      _this._updateImageState(STATUS_LOADED);\n\n      if (onLoad) {\n        onLoad(event);\n      }\n\n      _this._onLoadEnd();\n    };\n\n    _this._setImageRef = function (ref) {\n      _this._imageRef = ref;\n    };\n\n    var uri = resolveAssetUri(props.source);\n    var shouldDisplaySource = ImageUriCache.has(uri);\n    _this.state = {\n      layout: {},\n      shouldDisplaySource: shouldDisplaySource\n    };\n    _this._imageState = getImageState(uri, shouldDisplaySource);\n    _this._filterId = filterId;\n    filterId++;\n    return _this;\n  }\n\n  _createClass(Image, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n\n      if (this._imageState === STATUS_PENDING) {\n        this._createImageLoader();\n      } else if (this._imageState === STATUS_LOADED) {\n        this._onLoad({\n          target: this._imageRef\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevUri = resolveAssetUri(prevProps.source);\n      var uri = resolveAssetUri(this.props.source);\n      var hasDefaultSource = this.props.defaultSource != null;\n\n      if (prevUri !== uri) {\n        ImageUriCache.remove(prevUri);\n        var isPreviouslyLoaded = ImageUriCache.has(uri);\n        isPreviouslyLoaded && ImageUriCache.add(uri);\n\n        this._updateImageState(getImageState(uri, isPreviouslyLoaded), hasDefaultSource);\n      } else if (hasDefaultSource && prevProps.defaultSource !== this.props.defaultSource) {\n        this._updateImageState(this._imageState, hasDefaultSource);\n      }\n\n      if (this._imageState === STATUS_PENDING) {\n        this._createImageLoader();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var uri = resolveAssetUri(this.props.source);\n      ImageUriCache.remove(uri);\n\n      this._destroyImageLoader();\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var shouldDisplaySource = this.state.shouldDisplaySource;\n\n      var _this$props3 = this.props,\n          accessibilityLabel = _this$props3.accessibilityLabel,\n          accessible = _this$props3.accessible,\n          blurRadius = _this$props3.blurRadius,\n          defaultSource = _this$props3.defaultSource,\n          draggable = _this$props3.draggable,\n          source = _this$props3.source,\n          testID = _this$props3.testID,\n          capInsets = _this$props3.capInsets,\n          onError = _this$props3.onError,\n          onLayout = _this$props3.onLayout,\n          onLoad = _this$props3.onLoad,\n          onLoadEnd = _this$props3.onLoadEnd,\n          onLoadStart = _this$props3.onLoadStart,\n          resizeMethod = _this$props3.resizeMethod,\n          resizeMode = _this$props3.resizeMode,\n          other = _objectWithoutProperties(_this$props3, [\"accessibilityLabel\", \"accessible\", \"blurRadius\", \"defaultSource\", \"draggable\", \"source\", \"testID\", \"capInsets\", \"onError\", \"onLayout\", \"onLoad\", \"onLoadEnd\", \"onLoadStart\", \"resizeMethod\", \"resizeMode\"]);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.props.src) {\n          console.warn('The <Image> component requires a `source` property rather than `src`.');\n        }\n\n        if (this.props.children) {\n          throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.');\n        }\n      }\n\n      var selectedSource = shouldDisplaySource ? source : defaultSource;\n      var displayImageUri = resolveAssetUri(selectedSource);\n      var imageSizeStyle = resolveAssetDimensions(selectedSource);\n      var backgroundImage = displayImageUri ? \"url(\\\"\" + displayImageUri + \"\\\")\" : null;\n\n      var flatStyle = _objectSpread({}, StyleSheet.flatten(this.props.style));\n\n      var finalResizeMode = resizeMode || flatStyle.resizeMode || ImageResizeMode.cover;\n      var filters = [];\n      var tintColor = flatStyle.tintColor;\n\n      if (flatStyle.filter) {\n        filters.push(flatStyle.filter);\n      }\n\n      if (blurRadius) {\n        filters.push(\"blur(\" + blurRadius + \"px)\");\n      }\n\n      if (flatStyle.shadowOffset) {\n        var shadowString = resolveShadowValue(flatStyle);\n\n        if (shadowString) {\n          filters.push(\"drop-shadow(\" + shadowString + \")\");\n        }\n      }\n\n      if (flatStyle.tintColor) {\n        filters.push(\"url(#tint-\" + this._filterId + \")\");\n      }\n\n      delete flatStyle.shadowColor;\n      delete flatStyle.shadowOpacity;\n      delete flatStyle.shadowOffset;\n      delete flatStyle.shadowRadius;\n      delete flatStyle.tintColor;\n      delete flatStyle.overlayColor;\n      delete flatStyle.resizeMode;\n      var hiddenImage = displayImageUri ? createElement('img', {\n        alt: accessibilityLabel || '',\n        classList: [classes.accessibilityImage],\n        draggable: draggable || false,\n        ref: this._setImageRef,\n        src: displayImageUri\n      }) : null;\n      return React.createElement(View, _extends({}, other, {\n        accessibilityLabel: accessibilityLabel,\n        accessible: accessible,\n        onLayout: this._createLayoutHandler(finalResizeMode),\n        style: [styles.root, this.context.isInAParentText && styles.inline, imageSizeStyle, flatStyle],\n        testID: testID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: [styles.image, resizeModeStyles[finalResizeMode], this._getBackgroundSize(finalResizeMode), backgroundImage && {\n          backgroundImage: backgroundImage\n        }, filters.length > 0 && {\n          filter: filters.join(' ')\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }\n      }), hiddenImage, createTintColorSVG(tintColor, this._filterId));\n    }\n  }, {\n    key: \"_createImageLoader\",\n    value: function _createImageLoader() {\n      var source = this.props.source;\n\n      this._destroyImageLoader();\n\n      var uri = resolveAssetUri(source);\n      this._imageRequestId = ImageLoader.load(uri, this._onLoad, this._onError);\n\n      this._onLoadStart();\n    }\n  }, {\n    key: \"_destroyImageLoader\",\n    value: function _destroyImageLoader() {\n      if (this._imageRequestId) {\n        ImageLoader.abort(this._imageRequestId);\n        this._imageRequestId = null;\n      }\n    }\n  }, {\n    key: \"_onLoadEnd\",\n    value: function _onLoadEnd() {\n      var onLoadEnd = this.props.onLoadEnd;\n\n      if (onLoadEnd) {\n        onLoadEnd();\n      }\n    }\n  }, {\n    key: \"_onLoadStart\",\n    value: function _onLoadStart() {\n      var _this$props4 = this.props,\n          defaultSource = _this$props4.defaultSource,\n          onLoadStart = _this$props4.onLoadStart;\n\n      this._updateImageState(STATUS_LOADING, defaultSource != null);\n\n      if (onLoadStart) {\n        onLoadStart();\n      }\n    }\n  }, {\n    key: \"_updateImageState\",\n    value: function _updateImageState(status) {\n      var hasDefaultSource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this._imageState = status;\n      var shouldDisplaySource = this._imageState === STATUS_LOADED || this._imageState === STATUS_LOADING && !hasDefaultSource;\n\n      if (shouldDisplaySource !== this.state.shouldDisplaySource) {\n        if (this._isMounted) {\n          this.setState(function () {\n            return {\n              shouldDisplaySource: shouldDisplaySource\n            };\n          });\n        }\n      }\n    }\n  }]);\n\n  return Image;\n}(Component);\n\nImage.displayName = 'Image';\nImage.contextTypes = {\n  isInAParentText: bool\n};\nImage.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  blurRadius: number,\n  defaultSource: ImageSourcePropType,\n  draggable: bool,\n  onError: func,\n  onLayout: func,\n  onLoad: func,\n  onLoadEnd: func,\n  onLoadStart: func,\n  resizeMode: oneOf(Object.keys(ImageResizeMode)),\n  source: ImageSourcePropType,\n  style: StyleSheetPropType(ImageStylePropTypes),\n  capInsets: shape({\n    top: number,\n    left: number,\n    bottom: number,\n    right: number\n  }),\n  resizeMethod: oneOf(['auto', 'resize', 'scale'])\n});\nImage.defaultProps = {\n  style: emptyObject\n};\nvar classes = css.create({\n  accessibilityImage: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: '100%',\n    opacity: 0,\n    width: '100%',\n    zIndex: -1\n  })\n});\nvar styles = StyleSheet.create({\n  root: {\n    flexBasis: 'auto',\n    overflow: 'hidden',\n    zIndex: 0\n  },\n  inline: {\n    display: 'inline-flex'\n  },\n  image: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'transparent',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    height: '100%',\n    width: '100%',\n    zIndex: -1\n  })\n});\nvar resizeModeStyles = StyleSheet.create({\n  center: {\n    backgroundSize: 'auto'\n  },\n  contain: {\n    backgroundSize: 'contain'\n  },\n  cover: {\n    backgroundSize: 'cover'\n  },\n  none: {\n    backgroundPosition: '0 0',\n    backgroundSize: 'auto'\n  },\n  repeat: {\n    backgroundPosition: '0 0',\n    backgroundRepeat: 'repeat',\n    backgroundSize: 'auto'\n  },\n  stretch: {\n    backgroundSize: '100% 100%'\n  }\n});\nexport default applyNativeMethods(Image);","map":{"version":3,"sources":["/Users/bengreene/Desktop/SummerWork/personalApp153/bookList/node_modules/react-native-web/src/exports/Image/index.js"],"names":["applyNativeMethods","createElement","css","getAssetByID","resolveShadowValue","ImageLoader","ImageResizeMode","ImageSourcePropType","ImageStylePropTypes","ImageUriCache","StyleSheet","StyleSheetPropType","View","ViewPropTypes","bool","func","number","oneOf","shape","React","Component","emptyObject","STATUS_ERRORED","STATUS_LOADED","STATUS_LOADING","STATUS_PENDING","STATUS_IDLE","getImageState","uri","shouldDisplaySource","resolveAssetDimensions","source","height","width","svgDataUriPattern","resolveAssetUri","asset","scale","scales","scaleSuffix","httpServerLocation","name","type","match","prefix","svg","encodedSvg","encodeURIComponent","filterId","createTintColorSVG","tintColor","id","position","visibility","Image","success","failure","getSize","prefetch","then","add","remove","uris","result","forEach","u","has","Promise","resolve","props","context","_filterId","_imageRef","_imageRequestId","_imageState","_isMounted","_createLayoutHandler","resizeMode","onLayout","e","layout","nativeEvent","setState","_getBackgroundSize","naturalHeight","naturalWidth","state","scaleFactor","Math","min","x","ceil","y","backgroundSize","_onError","onError","_updateImageState","error","_onLoadEnd","_onLoad","onLoad","event","_setImageRef","ref","_createImageLoader","target","prevProps","prevUri","hasDefaultSource","defaultSource","isPreviouslyLoaded","_destroyImageLoader","accessibilityLabel","accessible","blurRadius","draggable","testID","capInsets","onLoadEnd","onLoadStart","resizeMethod","other","process","env","NODE_ENV","src","console","warn","children","Error","selectedSource","displayImageUri","imageSizeStyle","backgroundImage","flatStyle","flatten","style","finalResizeMode","cover","filters","filter","push","shadowOffset","shadowString","shadowColor","shadowOpacity","shadowRadius","overlayColor","hiddenImage","alt","classList","classes","accessibilityImage","styles","root","isInAParentText","inline","image","resizeModeStyles","length","join","load","_onLoadStart","abort","status","displayName","contextTypes","propTypes","Object","keys","top","left","bottom","right","defaultProps","create","absoluteFillObject","opacity","zIndex","flexBasis","overflow","display","backgroundColor","backgroundPosition","backgroundRepeat","center","contain","none","repeat","stretch"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport { getAssetByID } from '../../modules/AssetRegistry';\nimport resolveShadowValue from '../StyleSheet/resolveShadowValue';\nimport ImageLoader from '../../modules/ImageLoader';\nimport ImageResizeMode from './ImageResizeMode';\nimport ImageSourcePropType from './ImageSourcePropType';\nimport ImageStylePropTypes from './ImageStylePropTypes';\nimport ImageUriCache from './ImageUriCache';\nimport StyleSheet from '../StyleSheet';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { bool, func, number, oneOf, shape } from 'prop-types';\nimport React, { Component } from 'react';\n\nconst emptyObject = {};\n\nconst STATUS_ERRORED = 'ERRORED';\nconst STATUS_LOADED = 'LOADED';\nconst STATUS_LOADING = 'LOADING';\nconst STATUS_PENDING = 'PENDING';\nconst STATUS_IDLE = 'IDLE';\n\nconst getImageState = (uri, shouldDisplaySource) => {\n  return shouldDisplaySource ? STATUS_LOADED : uri ? STATUS_PENDING : STATUS_IDLE;\n};\n\nconst resolveAssetDimensions = source => {\n  if (typeof source === 'number') {\n    const { height, width } = getAssetByID(source);\n    return { height, width };\n  } else if (typeof source === 'object') {\n    const { height, width } = source;\n    return { height, width };\n  }\n};\n\nconst svgDataUriPattern = /^(data:image\\/svg\\+xml;utf8,)(.*)/;\nconst resolveAssetUri = source => {\n  let uri = '';\n  if (typeof source === 'number') {\n    // get the URI from the packager\n    const asset = getAssetByID(source);\n    const scale = asset.scales[0];\n    const scaleSuffix = scale !== 1 ? `@${scale}x` : '';\n    uri = asset ? `${asset.httpServerLocation}/${asset.name}${scaleSuffix}.${asset.type}` : '';\n  } else if (typeof source === 'string') {\n    uri = source;\n  } else if (source && typeof source.uri === 'string') {\n    uri = source.uri;\n  }\n\n  if (uri) {\n    const match = uri.match(svgDataUriPattern);\n    // inline SVG markup may contain characters (e.g., #, \") that need to be escaped\n    if (match) {\n      const [, prefix, svg] = match;\n      const encodedSvg = encodeURIComponent(svg);\n      return `${prefix}${encodedSvg}`;\n    }\n  }\n\n  return uri;\n};\n\nlet filterId = 0;\n\nconst createTintColorSVG = (tintColor, id) =>\n  tintColor && id != null ? (\n    <svg style={{ position: 'absolute', height: 0, visibility: 'hidden', width: 0 }}>\n      <defs>\n        <filter id={`tint-${id}`}>\n          <feFlood floodColor={`${tintColor}`} />\n          <feComposite in2=\"SourceAlpha\" operator=\"atop\" />\n        </filter>\n      </defs>\n    </svg>\n  ) : null;\n\ntype State = {\n  layout: Object,\n  shouldDisplaySource: boolean\n};\n\nclass Image extends Component<*, State> {\n  static displayName = 'Image';\n\n  static contextTypes = {\n    isInAParentText: bool\n  };\n\n  static propTypes = {\n    ...ViewPropTypes,\n    blurRadius: number,\n    defaultSource: ImageSourcePropType,\n    draggable: bool,\n    onError: func,\n    onLayout: func,\n    onLoad: func,\n    onLoadEnd: func,\n    onLoadStart: func,\n    resizeMode: oneOf(Object.keys(ImageResizeMode)),\n    source: ImageSourcePropType,\n    style: StyleSheetPropType(ImageStylePropTypes),\n    // compatibility with React Native\n    /* eslint-disable react/sort-prop-types */\n    capInsets: shape({ top: number, left: number, bottom: number, right: number }),\n    resizeMethod: oneOf(['auto', 'resize', 'scale'])\n    /* eslint-enable react/sort-prop-types */\n  };\n\n  static defaultProps = {\n    style: emptyObject\n  };\n\n  static getSize(uri, success, failure) {\n    ImageLoader.getSize(uri, success, failure);\n  }\n\n  static prefetch(uri) {\n    return ImageLoader.prefetch(uri).then(() => {\n      // Add the uri to the cache so it can be immediately displayed when used\n      // but also immediately remove it to correctly reflect that it has no active references\n      ImageUriCache.add(uri);\n      ImageUriCache.remove(uri);\n    });\n  }\n\n  static queryCache(uris) {\n    const result = {};\n    uris.forEach(u => {\n      if (ImageUriCache.has(u)) {\n        result[u] = 'disk/memory';\n      }\n    });\n    return Promise.resolve(result);\n  }\n\n  _filterId = 0;\n  _imageRef = null;\n  _imageRequestId = null;\n  _imageState = null;\n  _isMounted = false;\n\n  constructor(props, context) {\n    super(props, context);\n    // If an image has been loaded before, render it immediately\n    const uri = resolveAssetUri(props.source);\n    const shouldDisplaySource = ImageUriCache.has(uri);\n    this.state = { layout: {}, shouldDisplaySource };\n    this._imageState = getImageState(uri, shouldDisplaySource);\n    this._filterId = filterId;\n    filterId++;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (this._imageState === STATUS_PENDING) {\n      this._createImageLoader();\n    } else if (this._imageState === STATUS_LOADED) {\n      this._onLoad({ target: this._imageRef });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevUri = resolveAssetUri(prevProps.source);\n    const uri = resolveAssetUri(this.props.source);\n    const hasDefaultSource = this.props.defaultSource != null;\n    if (prevUri !== uri) {\n      ImageUriCache.remove(prevUri);\n      const isPreviouslyLoaded = ImageUriCache.has(uri);\n      isPreviouslyLoaded && ImageUriCache.add(uri);\n      this._updateImageState(getImageState(uri, isPreviouslyLoaded), hasDefaultSource);\n    } else if (hasDefaultSource && prevProps.defaultSource !== this.props.defaultSource) {\n      this._updateImageState(this._imageState, hasDefaultSource);\n    }\n    if (this._imageState === STATUS_PENDING) {\n      this._createImageLoader();\n    }\n  }\n\n  componentWillUnmount() {\n    const uri = resolveAssetUri(this.props.source);\n    ImageUriCache.remove(uri);\n    this._destroyImageLoader();\n    this._isMounted = false;\n  }\n\n  render() {\n    const { shouldDisplaySource } = this.state;\n    const {\n      accessibilityLabel,\n      accessible,\n      blurRadius,\n      defaultSource,\n      draggable,\n      source,\n      testID,\n      /* eslint-disable */\n      capInsets,\n      onError,\n      onLayout,\n      onLoad,\n      onLoadEnd,\n      onLoadStart,\n      resizeMethod,\n      resizeMode,\n      /* eslint-enable */\n      ...other\n    } = this.props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.props.src) {\n        console.warn('The <Image> component requires a `source` property rather than `src`.');\n      }\n\n      if (this.props.children) {\n        throw new Error(\n          'The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.'\n        );\n      }\n    }\n\n    const selectedSource = shouldDisplaySource ? source : defaultSource;\n    const displayImageUri = resolveAssetUri(selectedSource);\n    const imageSizeStyle = resolveAssetDimensions(selectedSource);\n    const backgroundImage = displayImageUri ? `url(\"${displayImageUri}\")` : null;\n    const flatStyle = { ...StyleSheet.flatten(this.props.style) };\n    const finalResizeMode = resizeMode || flatStyle.resizeMode || ImageResizeMode.cover;\n\n    // CSS filters\n    const filters = [];\n    const tintColor = flatStyle.tintColor;\n    if (flatStyle.filter) {\n      filters.push(flatStyle.filter);\n    }\n    if (blurRadius) {\n      filters.push(`blur(${blurRadius}px)`);\n    }\n    if (flatStyle.shadowOffset) {\n      const shadowString = resolveShadowValue(flatStyle);\n      if (shadowString) {\n        filters.push(`drop-shadow(${shadowString})`);\n      }\n    }\n    if (flatStyle.tintColor) {\n      filters.push(`url(#tint-${this._filterId})`);\n    }\n\n    // these styles were converted to filters\n    delete flatStyle.shadowColor;\n    delete flatStyle.shadowOpacity;\n    delete flatStyle.shadowOffset;\n    delete flatStyle.shadowRadius;\n    delete flatStyle.tintColor;\n    // these styles are not supported on View\n    delete flatStyle.overlayColor;\n    delete flatStyle.resizeMode;\n\n    // Accessibility image allows users to trigger the browser's image context menu\n    const hiddenImage = displayImageUri\n      ? createElement('img', {\n          alt: accessibilityLabel || '',\n          classList: [classes.accessibilityImage],\n          draggable: draggable || false,\n          ref: this._setImageRef,\n          src: displayImageUri\n        })\n      : null;\n\n    return (\n      <View\n        {...other}\n        accessibilityLabel={accessibilityLabel}\n        accessible={accessible}\n        onLayout={this._createLayoutHandler(finalResizeMode)}\n        style={[\n          styles.root,\n          this.context.isInAParentText && styles.inline,\n          imageSizeStyle,\n          flatStyle\n        ]}\n        testID={testID}\n      >\n        <View\n          style={[\n            styles.image,\n            resizeModeStyles[finalResizeMode],\n            this._getBackgroundSize(finalResizeMode),\n            backgroundImage && { backgroundImage },\n            filters.length > 0 && { filter: filters.join(' ') }\n          ]}\n        />\n        {hiddenImage}\n        {createTintColorSVG(tintColor, this._filterId)}\n      </View>\n    );\n  }\n\n  _createImageLoader() {\n    const { source } = this.props;\n    this._destroyImageLoader();\n    const uri = resolveAssetUri(source);\n    this._imageRequestId = ImageLoader.load(uri, this._onLoad, this._onError);\n    this._onLoadStart();\n  }\n\n  _destroyImageLoader() {\n    if (this._imageRequestId) {\n      ImageLoader.abort(this._imageRequestId);\n      this._imageRequestId = null;\n    }\n  }\n\n  _createLayoutHandler = resizeMode => {\n    const { onLayout } = this.props;\n    if (resizeMode === 'center' || resizeMode === 'repeat' || onLayout) {\n      return e => {\n        const { layout } = e.nativeEvent;\n        onLayout && onLayout(e);\n        this.setState(() => ({ layout }));\n      };\n    }\n  };\n\n  _getBackgroundSize = resizeMode => {\n    if (this._imageRef && (resizeMode === 'center' || resizeMode === 'repeat')) {\n      const { naturalHeight, naturalWidth } = this._imageRef;\n      const { height, width } = this.state.layout;\n      if (naturalHeight && naturalWidth && height && width) {\n        const scaleFactor = Math.min(1, width / naturalWidth, height / naturalHeight);\n        const x = Math.ceil(scaleFactor * naturalWidth);\n        const y = Math.ceil(scaleFactor * naturalHeight);\n        return {\n          backgroundSize: `${x}px ${y}px`\n        };\n      }\n    }\n  };\n\n  _onError = () => {\n    const { onError, source } = this.props;\n    this._updateImageState(STATUS_ERRORED);\n    if (onError) {\n      onError({\n        nativeEvent: {\n          error: `Failed to load resource ${resolveAssetUri(source)} (404)`\n        }\n      });\n    }\n    this._onLoadEnd();\n  };\n\n  _onLoad = e => {\n    const { onLoad, source } = this.props;\n    const event = { nativeEvent: e };\n    ImageUriCache.add(resolveAssetUri(source));\n    this._updateImageState(STATUS_LOADED);\n    if (onLoad) {\n      onLoad(event);\n    }\n    this._onLoadEnd();\n  };\n\n  _onLoadEnd() {\n    const { onLoadEnd } = this.props;\n    if (onLoadEnd) {\n      onLoadEnd();\n    }\n  }\n\n  _onLoadStart() {\n    const { defaultSource, onLoadStart } = this.props;\n    this._updateImageState(STATUS_LOADING, defaultSource != null);\n    if (onLoadStart) {\n      onLoadStart();\n    }\n  }\n\n  _setImageRef = ref => {\n    this._imageRef = ref;\n  };\n\n  _updateImageState(status: ?string, hasDefaultSource: ?boolean = false) {\n    this._imageState = status;\n    const shouldDisplaySource =\n      this._imageState === STATUS_LOADED ||\n      (this._imageState === STATUS_LOADING && !hasDefaultSource);\n    // only triggers a re-render when the image is loading and has no default image (to support PJPEG), loaded, or failed\n    if (shouldDisplaySource !== this.state.shouldDisplaySource) {\n      if (this._isMounted) {\n        this.setState(() => ({ shouldDisplaySource }));\n      }\n    }\n  }\n}\n\nconst classes = css.create({\n  accessibilityImage: {\n    ...StyleSheet.absoluteFillObject,\n    height: '100%',\n    opacity: 0,\n    width: '100%',\n    zIndex: -1\n  }\n});\n\nconst styles = StyleSheet.create({\n  root: {\n    flexBasis: 'auto',\n    overflow: 'hidden',\n    zIndex: 0\n  },\n  inline: {\n    display: 'inline-flex'\n  },\n  image: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'transparent',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    height: '100%',\n    width: '100%',\n    zIndex: -1\n  }\n});\n\nconst resizeModeStyles = StyleSheet.create({\n  center: {\n    backgroundSize: 'auto'\n  },\n  contain: {\n    backgroundSize: 'contain'\n  },\n  cover: {\n    backgroundSize: 'cover'\n  },\n  none: {\n    backgroundPosition: '0 0',\n    backgroundSize: 'auto'\n  },\n  repeat: {\n    backgroundPosition: '0 0',\n    backgroundRepeat: 'repeat',\n    backgroundSize: 'auto'\n  },\n  stretch: {\n    backgroundSize: '100% 100%'\n  }\n});\n\nexport default applyNativeMethods(Image);\n"]},"metadata":{},"sourceType":"module"}